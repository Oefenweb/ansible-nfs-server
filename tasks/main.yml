# tasks file
---
- name: include variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "_{{ ansible_distribution_release }}.yml"
    - "_{{ ansible_distribution | lower }}.yml"
    - _default.yml
  tags:
    - configuration
    - nfs-server
    - nfs-server-include-variables

- name: install dependencies
  ansible.builtin.apt:
    name: "{{ nfs_server_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - nfs-server
    - nfs-server-install
    - nfs-server-install-dependencies

- name: stat configuration file(s) directories
  ansible.builtin.stat:
    path: "{{ item }}/"
  register: _stat_directories
  with_items:
    - "{{ nfs_server_etc_default_nfs_common_file | dirname }}"
    - "{{ nfs_server_etc_default_nfs_kernel_server_file | dirname }}"
    - "{{ nfs_server_lockd_file | dirname }}"
  tags:
    - configuration
    - nfs-server
    - nfs-server-configuration

- name: create configuration file(s) directories
  ansible.builtin.file:
    path: "{{ item.item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ _stat_directories.results }}"
  when: not item.stat.exists
  tags:
    - configuration
    - nfs-server
    - nfs-server-configuration

- name: update configuration file(s)
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: "{{ nfs_server_etc_default_nfs_common_file.lstrip('/') }}.j2"
      dest: "{{ nfs_server_etc_default_nfs_common_file }}"
    - src: "{{ nfs_server_etc_default_nfs_kernel_server_file.lstrip('/') }}.j2"
      dest: "{{ nfs_server_etc_default_nfs_kernel_server_file }}"
    - src: "{{ nfs_server_lockd_file.lstrip('/') }}.j2"
      dest: "{{ nfs_server_lockd_file }}"
    - src: "{{ nfs_server_exports_file.lstrip('/') }}.j2"
      dest: "{{ nfs_server_exports_file }}"
  notify: restart nfs-server
  tags:
    - configuration
    - nfs-server
    - nfs-server-configuration

- name: start and enable service
  ansible.builtin.service:
    name: "{{ nfs_server_service_name }}"
    state: "{{ nfs_server_service_state }}"
    enabled: "{{ nfs_server_service_enabled | bool }}"
  tags:
    - configuration
    - nfs-server
    - nfs-server-start-enable-service
